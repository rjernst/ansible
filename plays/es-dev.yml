---
- name: setup elasticsearch development
  hosts: localhost
  vars:
    username: "{{ ansible_user_id }}"
    github_user: "{{ username | default(ansible_user_id) }}"
    code_dir: code/elastic
    min_jdk: 8
    use_ramdisk: true
  tasks:
    - name: setup ramdisk
      include_role:
        name: dev
        tasks_from: ramdisk
      when: use_ramdisk

    - name: create repo base dir
      shell: mkdir -p "$HOME/{{ code_dir }}"

    - name: set repo path
      set_fact:
        checkout_path: "$HOME/{{ code_dir }}/elasticsearch"
        repo_path: "$HOME/{{ code_dir }}/elasticsearch"

    - name: set checkout to ramdisk
      set_fact:
        checkout_path: "/mnt/ramdisk/elasticsearch"
      when: use_ramdisk

    - name: link to ramdisk
      file:
        src: "{{ checkout_path }}"
        dest: "{{ repo_path }}"
        force: yes
        follow: no
        state: link
      when: use_ramdisk

    - name: clone repo
      git:
        repo: "git@github.com:elastic/elasticsearch.git"
        dest: "{{ checkout_path }}"
        remote: upstream
        update: no

    - name: find origin remote
      shell: git remote get-url origin
      register: origin_cmd
      failed_when: origin_cmd.rc != 0 and origin_cmd.rc != 128
      args:
        chdir: "{{ repo_path }}"

    - name: add origin remote
      shell: "git remote add origin git@github.com:{{ github_user }}/elasticsearch.git"
      when: origin_cmd.rc != 0
      args:
        chdir: "{{ repo_path }}"

    - name: find elasticsearch major version
      shell: "cat {{ repo_path }}/buildSrc/version.properties |& head -1 |& cut -d= -f2 |& cut -d. -f1 |& cut -d' ' -f2"
      register: elasticsearch_version_str
      args:
        chdir: "{{ repo_path }}"

    - name: set previous elasticsearch major version
      set_fact:
        es_prev_major: "{{ elasticsearch_version_str.stdout_lines[0]|int - 1 }}"

    - name: set worktree path
      set_fact:
        es_worktree: "{{ repo_path }}-{{ es_prev_major }}.x"

    - name: check if worktree exists
      stat:
        path: "{{ es_worktree }}"
      register: worktree_result

    - name: "add {{ es_prev_major }}.x worktree"
      shell: "git worktree add --track -b {{ es_prev_major }}.x {{ es_worktree }} upstream/{{ es_prev_major }}.x"
      args:
        chdir: "{{ repo_path }}"
      when: worktree_result.stat.exists == False

    - name: setup vagrant
      import_role:
        name: dev
        tasks_from: vagrant
      become: true

    - name: setup java
      include_role:
        name: dev
        tasks_from: java

    - name: setup gradle
      include_role:
        name: dev
        tasks_from: gradle

